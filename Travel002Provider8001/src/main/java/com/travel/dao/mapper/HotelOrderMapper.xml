<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.travel.dao.HotelOrderMapper" >
  <resultMap id="BaseResultMap" type="com.travel.pojo.HotelOrder" >
    <id column="hotel_order_id" property="hotelOrderId" jdbcType="INTEGER" />
    <result column="hotel_order_time" property="hotelOrderTime" jdbcType="TIMESTAMP" />
    <result column="hotel_order_checktime" property="hotelOrderChecktime" jdbcType="TIMESTAMP" />
    <result column="hotel_order_leavetime" property="hotelOrderLeavetime" jdbcType="TIMESTAMP" />
    <result column="hotel_order_number" property="hotelOrderNumber" jdbcType="INTEGER" />
    <result column="users_id" property="usersId" jdbcType="INTEGER" />
    <result column="hotel_id" property="hotelId" jdbcType="INTEGER" />
    <result column="hotel_order_totalprice" property="hotelOrderTotalprice" jdbcType="DOUBLE" />
    <result column="scenic_comment_intdescr" property="scenicCommentIntdescr" jdbcType="INTEGER" />
    <result column="scenic_comment_vardescr" property="scenicCommentVardescr" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    hotel_order_id, hotel_order_time, hotel_order_checktime, hotel_order_leavetime, hotel_order_number, 
    users_id, hotel_id, hotel_order_totalprice, scenic_comment_intdescr, scenic_comment_vardescr
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.travel.pojo.HotelOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hotel_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from hotel_order
    where hotel_order_id = #{hotelOrderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from hotel_order
    where hotel_order_id = #{hotelOrderId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.travel.pojo.HotelOrderExample" >
    delete from hotel_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.travel.pojo.HotelOrder" >
    insert into hotel_order (hotel_order_id, hotel_order_time, hotel_order_checktime, 
      hotel_order_leavetime, hotel_order_number, 
      users_id, hotel_id, hotel_order_totalprice, 
      scenic_comment_intdescr, scenic_comment_vardescr
      )
    values (#{hotelOrderId,jdbcType=INTEGER}, #{hotelOrderTime,jdbcType=TIMESTAMP}, #{hotelOrderChecktime,jdbcType=TIMESTAMP}, 
      #{hotelOrderLeavetime,jdbcType=TIMESTAMP}, #{hotelOrderNumber,jdbcType=INTEGER}, 
      #{usersId,jdbcType=INTEGER}, #{hotelId,jdbcType=INTEGER}, #{hotelOrderTotalprice,jdbcType=DOUBLE}, 
      #{scenicCommentIntdescr,jdbcType=INTEGER}, #{scenicCommentVardescr,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.travel.pojo.HotelOrder" >
    insert into hotel_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="hotelOrderId != null" >
        hotel_order_id,
      </if>
      <if test="hotelOrderTime != null" >
        hotel_order_time,
      </if>
      <if test="hotelOrderChecktime != null" >
        hotel_order_checktime,
      </if>
      <if test="hotelOrderLeavetime != null" >
        hotel_order_leavetime,
      </if>
      <if test="hotelOrderNumber != null" >
        hotel_order_number,
      </if>
      <if test="usersId != null" >
        users_id,
      </if>
      <if test="hotelId != null" >
        hotel_id,
      </if>
      <if test="hotelOrderTotalprice != null" >
        hotel_order_totalprice,
      </if>
      <if test="scenicCommentIntdescr != null" >
        scenic_comment_intdescr,
      </if>
      <if test="scenicCommentVardescr != null" >
        scenic_comment_vardescr,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="hotelOrderId != null" >
        #{hotelOrderId,jdbcType=INTEGER},
      </if>
      <if test="hotelOrderTime != null" >
        #{hotelOrderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="hotelOrderChecktime != null" >
        #{hotelOrderChecktime,jdbcType=TIMESTAMP},
      </if>
      <if test="hotelOrderLeavetime != null" >
        #{hotelOrderLeavetime,jdbcType=TIMESTAMP},
      </if>
      <if test="hotelOrderNumber != null" >
        #{hotelOrderNumber,jdbcType=INTEGER},
      </if>
      <if test="usersId != null" >
        #{usersId,jdbcType=INTEGER},
      </if>
      <if test="hotelId != null" >
        #{hotelId,jdbcType=INTEGER},
      </if>
      <if test="hotelOrderTotalprice != null" >
        #{hotelOrderTotalprice,jdbcType=DOUBLE},
      </if>
      <if test="scenicCommentIntdescr != null" >
        #{scenicCommentIntdescr,jdbcType=INTEGER},
      </if>
      <if test="scenicCommentVardescr != null" >
        #{scenicCommentVardescr,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.travel.pojo.HotelOrderExample" resultType="java.lang.Integer" >
    select count(*) from hotel_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update hotel_order
    <set >
      <if test="record.hotelOrderId != null" >
        hotel_order_id = #{record.hotelOrderId,jdbcType=INTEGER},
      </if>
      <if test="record.hotelOrderTime != null" >
        hotel_order_time = #{record.hotelOrderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.hotelOrderChecktime != null" >
        hotel_order_checktime = #{record.hotelOrderChecktime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.hotelOrderLeavetime != null" >
        hotel_order_leavetime = #{record.hotelOrderLeavetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.hotelOrderNumber != null" >
        hotel_order_number = #{record.hotelOrderNumber,jdbcType=INTEGER},
      </if>
      <if test="record.usersId != null" >
        users_id = #{record.usersId,jdbcType=INTEGER},
      </if>
      <if test="record.hotelId != null" >
        hotel_id = #{record.hotelId,jdbcType=INTEGER},
      </if>
      <if test="record.hotelOrderTotalprice != null" >
        hotel_order_totalprice = #{record.hotelOrderTotalprice,jdbcType=DOUBLE},
      </if>
      <if test="record.scenicCommentIntdescr != null" >
        scenic_comment_intdescr = #{record.scenicCommentIntdescr,jdbcType=INTEGER},
      </if>
      <if test="record.scenicCommentVardescr != null" >
        scenic_comment_vardescr = #{record.scenicCommentVardescr,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update hotel_order
    set hotel_order_id = #{record.hotelOrderId,jdbcType=INTEGER},
      hotel_order_time = #{record.hotelOrderTime,jdbcType=TIMESTAMP},
      hotel_order_checktime = #{record.hotelOrderChecktime,jdbcType=TIMESTAMP},
      hotel_order_leavetime = #{record.hotelOrderLeavetime,jdbcType=TIMESTAMP},
      hotel_order_number = #{record.hotelOrderNumber,jdbcType=INTEGER},
      users_id = #{record.usersId,jdbcType=INTEGER},
      hotel_id = #{record.hotelId,jdbcType=INTEGER},
      hotel_order_totalprice = #{record.hotelOrderTotalprice,jdbcType=DOUBLE},
      scenic_comment_intdescr = #{record.scenicCommentIntdescr,jdbcType=INTEGER},
      scenic_comment_vardescr = #{record.scenicCommentVardescr,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.travel.pojo.HotelOrder" >
    update hotel_order
    <set >
      <if test="hotelOrderTime != null" >
        hotel_order_time = #{hotelOrderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="hotelOrderChecktime != null" >
        hotel_order_checktime = #{hotelOrderChecktime,jdbcType=TIMESTAMP},
      </if>
      <if test="hotelOrderLeavetime != null" >
        hotel_order_leavetime = #{hotelOrderLeavetime,jdbcType=TIMESTAMP},
      </if>
      <if test="hotelOrderNumber != null" >
        hotel_order_number = #{hotelOrderNumber,jdbcType=INTEGER},
      </if>
      <if test="usersId != null" >
        users_id = #{usersId,jdbcType=INTEGER},
      </if>
      <if test="hotelId != null" >
        hotel_id = #{hotelId,jdbcType=INTEGER},
      </if>
      <if test="hotelOrderTotalprice != null" >
        hotel_order_totalprice = #{hotelOrderTotalprice,jdbcType=DOUBLE},
      </if>
      <if test="scenicCommentIntdescr != null" >
        scenic_comment_intdescr = #{scenicCommentIntdescr,jdbcType=INTEGER},
      </if>
      <if test="scenicCommentVardescr != null" >
        scenic_comment_vardescr = #{scenicCommentVardescr,jdbcType=VARCHAR},
      </if>
    </set>
    where hotel_order_id = #{hotelOrderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.travel.pojo.HotelOrder" >
    update hotel_order
    set hotel_order_time = #{hotelOrderTime,jdbcType=TIMESTAMP},
      hotel_order_checktime = #{hotelOrderChecktime,jdbcType=TIMESTAMP},
      hotel_order_leavetime = #{hotelOrderLeavetime,jdbcType=TIMESTAMP},
      hotel_order_number = #{hotelOrderNumber,jdbcType=INTEGER},
      users_id = #{usersId,jdbcType=INTEGER},
      hotel_id = #{hotelId,jdbcType=INTEGER},
      hotel_order_totalprice = #{hotelOrderTotalprice,jdbcType=DOUBLE},
      scenic_comment_intdescr = #{scenicCommentIntdescr,jdbcType=INTEGER},
      scenic_comment_vardescr = #{scenicCommentVardescr,jdbcType=VARCHAR}
    where hotel_order_id = #{hotelOrderId,jdbcType=INTEGER}
  </update>
</mapper>